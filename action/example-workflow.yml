# Example GitHub Actions workflow for using Rediacc Elite services
# Copy this file to your repository at .github/workflows/integration-test.yml

name: Integration Tests with Rediacc

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      # Checkout your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Start Rediacc Elite services
      # This will spin up nginx, API, and SQL Server
      - name: Start Rediacc Elite Services
        id: rediacc
        uses: your-org/monorepo/cloud/elite/action@main  # Update to your repo path
        env:
          # Required: Docker registry credentials
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      # Verify services are running
      - name: Verify Rediacc Services
        run: |
          echo "API URL: ${{ steps.rediacc.outputs.api-url }}"

          # Test API health endpoint
          curl -f http://localhost/api/health || {
            echo "API health check failed"
            exit 1
          }

      # Run your integration tests
      - name: Run Integration Tests
        run: |
          # Example: Run your test suite that connects to Rediacc
          # npm test
          # pytest tests/integration/
          # go test ./integration/...

          # API is available at http://localhost
          # You can use the Rediacc API for testing

          echo "Running integration tests against Rediacc services..."
          # Your test commands here

      # Example: Test with Node.js
      - name: Setup Node.js (if needed)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (if needed)
        run: npm ci

      - name: Run Node.js tests
        run: npm test
        env:
          REDIACC_API_URL: http://localhost
          REDIACC_API_TOKEN: ${{ secrets.REDIACC_API_TOKEN }}  # If you need authentication

      # Services will automatically be cleaned up after the workflow
      # (handled by the action's cleanup step)
